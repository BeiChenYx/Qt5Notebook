设计师designer完整源码（仅限Qt4）：https://pan.baidu.com/s/1t9uKOgi7PW34Kdj7rgTlrA
设计师designer可执行文件：https://pan.baidu.com/s/1h3oUjqBun2_YD68gry84wQ
自定义控件Qt4封装版本：https://pan.baidu.com/s/1JnpCwIW5sY9VtViqHSCi1g
自定义控件Qt5封装版本：https://pan.baidu.com/s/17gY83gSbUOxDrvaLNYUhjA

目录说明：
demo    	目录为单个控件对应的完整的项目，可以独立使用，每个控件demo下都对应一个项目。
designer 	目录为自定义控件的完整源码，插件形式。
examples	目录为整体的示例，通过按钮打开具体控件的示例，依赖于生成好的quc.dll文件。
sdk     	目录是已经生成好的各个qt版本+编译器版本对应的quc.dll文件，可以放到对应的qt安装目录下的bin目录同级别的plugins\designer下，然后打开bin目录下的designer.exe就可以看到效果。
sdkdemo		目录是演示如何通过插件的方式调用自定义控件，即源码+dll。
snap    	目录为对应控件的运行效果截图。
qtactivex	目录为控件编写成activex插件，在网页上运行。
property	目录为动态属性更改自定义控件属性。


如果对在designer中能看到控件而在qtcreator中看不到的疑问，可以参考配套的这篇文章：https://blog.csdn.net/feiyangqingyun/article/details/53667460

1：编译后quc.dll和examples.exe可执行文件生成在源码下的bin目录。demo下的单个控件的使用示例生成文件放在demo文件夹下的bin目录。
2：运行效果建议双击examples.exe看整体的效果。
3：源码建议从demo目录下单个单个控件学习。
4：如果想集成到qtcreator中，先确定对应qtcreator版本所用的qt版本和编译器版本是否一致，必须一致才能保证集成成功，
   将quc.dll或者libquc.so放到QtCreator\bin\plugins\designer目录即可。如果是集成的qtcreator则对应目录为tool\qtcreator\lib\qt\plugins\designer。
5：如果想直接把拖过去进行开发编译，默认肯定会报错，因为找不到插件和头文件，你需要参照sdkdemo的写法进行，
   无非就是将你用到的插件和对应控件的头文件复制到项目目录下引用即可。当然如果为了偷懒你可以将所有的控件的头文件复制过来也没有问题。

V20180815
1：重新分组分类。
2：修正头文件注释文字最小化写成最大化的错误。
3：树状导航控件新增父节点子节点前景色背景色设置和各种牛逼的功能，超级强大。
4：新增定制控件PLM仪表盘。
5：头文件移动到include目录。
6：整体demo导航主界面重写。
7：新增平铺背景控件。
8：新增魔法水滴控件。
9：新增鱼儿游动demo。
10：所有仪表盘等控件demo设置默认值88。
11：新增多彩仪表盘控件。
12：将Qt4时代的demo中的矢量图等控件整合成一个frmdemo,修改代码以便支持Qt5。

V20180715
1：新增魔法鱼控件。
2：新增魔法老鼠控件。
3：新增防区设备控件。
4：去除所有flatui引用，使得耦合度低，目前只剩flatui和wkslider保留了对flatui的引用。
5：修正部分BUG。

V20180520
1：将所有单例模式改为智能指针，自动释放资源。

V20171220
1：sin cos标准函数全部改为qSin qCos。
2：水波进度增加反向波浪属性。
3：滑动选择器增加单击识别。
4：新增气泡提示滑动条控件。
5：新增导航按钮控件。
6：新增飞机姿态仪表盘控件。

V20171205
1：增加农历控件。
2：修正绘制圆角BUG。
3：改进demo为代码设置属性，之前为设计师设计。
4：矫正指南针仪表盘数字偏移。
5：将部分drawText改为drawValue，描述更准确。
6：修正部分BUG。

V20171121
1：完善部分控件源码。
2：完善部分控件使用demo。
3：增加迷你仪表盘控件。

V20171119
1：字体相关设置全部改为按照像素设置。这样可以适应各种分辨率。
2：修正部分BUG。
3：增加部分控件。

V20171020
1：增加面板元素控件。
2：增加颜色按钮面板、颜色选取面板、颜色滑块面板三个控件。

V20171015
1：改进百分比进度条算法，增加边框突出选项，使之更完美。

V20170910
1：新增声音数据波形显示控件。
2：新增样式颜色选择控件。
3：波浪控件新增圆柱风格。

V20170822
1：增加水波进度球控件。
2：调整所有字体设置，所有负数范围值设置。
3：新增范围选择条控件。


V20170811
1：增加IP地址控件。
2：增加日期时间滑动选择器控件。

quc是一套和qwt类似的自定义控件插件。

特点：
1：超过90个精美控件，涵盖了各种仪表盘、进度条、进度球、指南针、曲线图、标尺、温度计、导航条、导航栏，flatui、高亮按钮、滑动选择器、农历等。远超qwt集成的控件数量。
2：每个类都可以独立成一个单独的控件，零耦合，每个控件一个头文件和一个实现文件，不依赖其他文件，方便单个控件以源码形式集成到项目中，较少代码量。qwt的控件类环环相扣，高度耦合，想要使用其中一个控件，必须包含所有的代码。
3：全部纯Qt编写，QWidget+QPainter绘制，支持Qt4.6到Qt5.10的任何Qt版本，支持mingw、msvc、gcc等编译器，不乱码，可直接集成到Qt Creator中，和自带的控件一样使用，大部分效果只要设置几个属性即可，极为方便。
4：每个控件都有一个对应的单独的包含该控件源码的DEMO，方便参考使用。同时还提供一个所有控件使用的集成的DEMO。
5：每个控件的源代码都有详细中文注释，都按照统一设计规范编写，方便学习自定义控件的编写。
6：每个控件默认配色和DEMO对应的配色都非常精美。
7：超过85个可见控件，6个不可见控件。
8：部分控件提供多种样式风格选择，多种指示器样式选择。
9：所有控件自适应窗体拉伸变化。
10：集成fontawesome图形字体，享受图形字体带来的乐趣。


设计规范

1：所有命名均为首字母小写，例如setValue；
2：私有变量及函数不建议使用下划线；
3：设置用set开头，获取值用get开头；
4：公共方法和公有槽都要注释，私有的变量和方法建议注释。
5：方法及变量类似的含义的，可以靠在一起分组，不同分组间空一行。
6：所有公共方法，函数体超过一行的在头文件中只声明，实现文件中写具体方法。
7：void类型的公共方法全部改为公共槽。

头文件依次排列顺序：
属性
public:			构造函数及析构函数
protected:		重写的方法，例如paintEvent等。
private:		私有变量
private slots:	私有槽函数
public:			公共方法
public slots:	公有槽函数
signal:			信号


精美颜色：  淡绿色：#28C0C6  
天蓝色：	100, 184, 255   52, 152, 219  33, 183, 232   103, 202, 223
淡红色：	255, 107, 107   231, 76, 60   245, 102, 118  249, 126, 129
淡绿色：	24, 189, 155    26, 188, 156  1, 174, 103    131, 211, 182
褐黑色：	97, 117, 118    52, 73, 94
淡背景色：	211, 236, 255  199, 229, 255

增加如下代码可以让自定义控件应用原有父类的样式
//设置可以应用样式表
QStyleOption opt;
opt.init(this);
style()->drawPrimitive(QStyle::PE_Widget, &opt, &painter, this);
QWidget::paintEvent(event);